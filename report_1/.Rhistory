for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##wald
ci_wald = Wald_CI(sample_binom, n = 30, 100, alpha = 0.05)
temp_len[mcs] <- ci_wald[2] - ci_wald[1]
temp_coverage[mcs] <-sum(ci_wald[1] < sample_binom/30& sample_binom/30<ci_wald[2])
}
wald_res_len_30[i] <-  mean(temp_len)
wald_res_coverage_30[i] <-  mean(temp_coverage)
}
plot(p_s, wald_res_len_30)
plot(p_s, wald_res_coverage_30, type = "l")
library(binom)
cp_res_coverage_30 = rep(0,99)
cp_res_len_30 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##wald
ci_cp = binom.confint(sample_binom, n = 30*100, 100, alpha = 0.05)
temp_len[mcs] <- mean(ci_cp$lower- ci_cp$upper)
temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/30& sample_binom/30<mean(ci_cp$upper)])
cp_res_coverage_30 = rep(0,99)
cp_res_len_30 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##cp
ci_cp = binom.confint(sample_binom, n = 30*100, 100, alpha = 0.05)
temp_len[mcs] <- mean(ci_cp$lower- ci_cp$upper)
temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/30& sample_binom/30<mean(ci_cp$upper))
}
cp_res_len_30[i] <-  mean(temp_len)
cp_res_coverage_30[i] <-  mean(temp_coverage)
}
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
ci_cp = binom.confint(sample_binom, n = 30*100, 100, alpha = 0.05)
print(mean(ci_cp$lower- ci_cp$upper))
}
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
ci_cp = binom.confint(sample_binom, n = 30, 100, alpha = 0.05)
print(mean(ci_cp$lower- ci_cp$upper))
}
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
ci_cp = binom.confint(sample_binom, n = 30, 100, alpha = 0.05, methods = "exact")
print(mean(ci_cp$lower- ci_cp$upper))
}
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
ci_cp = binom.confint(sample_binom, n = 30*100, 100, alpha = 0.05, methods = "exact")
print(mean(ci_cp$lower- ci_cp$upper))
}
warnings()
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
samp
ci_cp = binom.confint(sample_binom, n = 30*100, alpha = 0.05, methods = "exact")
print(mean(ci_cp$lower- ci_cp$upper))
}
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
ci_cp = binom.confint(sample_binom, n = 30*100, alpha = 0.05, methods = "exact")
print(mean(ci_cp$upper- ci_cp$lower))
}
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
ci_cp = binom.confint(sample_binom, n = 30, alpha = 0.05, methods = "exact")
print(mean(ci_cp$upper- ci_cp$lower))
}
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
ci_cp = binom.confint(samp, n = 30, alpha = 0.05, methods = "exact")
print(mean(ci_cp$upper - ci_cp$lower))
}
for (i in 1:99) {
samp = rbinom(n = 100, size = 30, prob = p_s[i])
ci_cp = binom.confint(samp, n = 30, alpha = 0.05, methods = "exact")
print(mean(ci_cp$upper - ci_cp$lower))
}
cp_res_coverage_30 = rep(0,99)
cp_res_len_30 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##cp
ci_cp = binom.confint(sample_binom, n = 30, 100, alpha = 0.05, methods = "exact")
temp_len[mcs] <- mean(ci_cp$lower- ci_cp$upper)
temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/30& sample_binom/30<mean(ci_cp$upper))/100
}
cp_res_len_30[i] <-  mean(temp_len)
cp_res_coverage_30[i] <-  mean(temp_coverage)
}
plot(p_s, cp_res_len_30)
cp_res_coverage_30 = rep(0,99)
cp_res_len_30 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##cp
ci_cp = binom.confint(sample_binom, n = 30, 100, alpha = 0.05, methods = "exact")
temp_len[mcs] <- mean(ci_cp$upper- ci_cp$lower)
#temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/30& sample_binom/30<mean(ci_cp$upper))/100
}
cp_res_len_30[i] <-  mean(temp_len)
#cp_res_coverage_30[i] <-  mean(temp_coverage)
}
cp_res_coverage_30 = rep(0,99)
cp_res_len_30 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##cp
ci_cp = binom.confint(sample_binom, n = 30,alpha = 0.05, methods = "exact")
temp_len[mcs] <- mean(ci_cp$upper- ci_cp$lower)
#temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/30& sample_binom/30<mean(ci_cp$upper))/100
}
cp_res_len_30[i] <-  mean(temp_len)
#cp_res_coverage_30[i] <-  mean(temp_coverage)
}
plot(p_s, cp_res_len_30)
cp_res_coverage_30 = rep(0,99)
cp_res_len_30 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##cp
ci_cp = binom.confint(sample_binom, n = 30,alpha = 0.05, methods = "exact")
temp_len[mcs] <- mean(ci_cp$upper- ci_cp$lower)
temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/30& sample_binom/30<mean(ci_cp$upper))/100
}
cp_res_len_30[i] <-  mean(temp_len)
cp_res_coverage_30[i] <-  mean(temp_coverage)
}
plot(p_s, cp_res_len_30)
plot(p_s, cp_coverage_30, type = "l")
plot(p_s, cp_res_coverage_30, type = "l")
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2, ylim=c(0, 0.5)
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2, ylim=c(0, 0.5)
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2, ylim=c(0, 0.5))
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2, ylim=c(0, 0.5))
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2, ylim=c(0, 0.5))
lines(p_s, cp_res_len_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
ac_res_coverage_30 = rep(0,99)
ac_res_len_30 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##cp
ci_ac = binom.confint(sample_binom, n = 30,alpha = 0.05, methods = "agresti-coull")
temp_len[mcs] <- mean(ci_ac$upper- ci_ac$lower)
temp_coverage[mcs] <-sum(mean(ci_ac$lower) < sample_binom/30& sample_binom/30<mean(ci_ac$upper))/100
}
ac_res_len_30[i] <-  mean(temp_len)
ac_res_coverage_30[i] <-  mean(temp_coverage)
}
plot(p_s, ac_res_len_30)
plot(p_s, ac_res_coverage_30, type = "l")
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2, ylim=c(0, 0.5))
lines(p_s, cp_res_len_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_len_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Main title", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2, ylim=c(0, 0.5))
lines(p_s, cp_res_len_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_len_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Average lengths of CIs for n = 30", xlab = "coverage percentage", ylab = "average length of CI",
lty = 1, lwd = 2, ylim=c(0, 0.5))
lines(p_s, cp_res_len_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_len_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Average lengths of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, cp_res_len_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_len_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,cp_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
plot(p_s,cp_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, wald_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
plot(p_s,wald_res_len_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Average lengths of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, cp_res_len_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_len_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Average lengths of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
wald_res_coverage_30 = rep(0,99)
wald_res_len_30 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 30, prob = p_s[i])
##wald
ci_wald = Wald_CI(sample_binom, n = 30, 100, alpha = 0.05)
temp_len[mcs] <- ci_wald[2] - ci_wald[1]
temp_coverage[mcs] <-sum(ci_wald[1] < sample_binom/30& sample_binom/30<ci_wald[2])/100
}
wald_res_len_30[i] <-  mean(temp_len)
wald_res_coverage_30[i] <-  mean(temp_coverage)
}
plot(p_s,wald_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2, )
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2,ylim = c(0,1))
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2,ylim = c(0.5,1))
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
wald_res_coverage_50 = rep(0,99)
wald_res_len_50 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 50, prob = p_s[i])
##wald
ci_wald = Wald_CI(sample_binom, n = 50, 100, alpha = 0.05)
temp_len[mcs] <- ci_wald[2] - ci_wald[1]
temp_coverage[mcs] <-sum(ci_wald[1] < sample_binom/50& sample_binom/50<ci_wald[2])/100
}
wald_res_len_50[i] <-  mean(temp_len)
wald_res_coverage_50[i] <-  mean(temp_coverage)
}
plot(p_s, wald_res_len_50)
plot(p_s, wald_res_coverage_50, type = "l")
### n = 100
wald_res_coverage_100 = rep(0,99)
wald_res_len_100 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 100, prob = p_s[i])
##wald
ci_wald = Wald_CI(sample_binom, n = 100, 100, alpha = 0.05)
temp_len[mcs] <- ci_wald[2] - ci_wald[1]
temp_coverage[mcs] <-sum(ci_wald[1] < sample_binom/100& sample_binom/100<ci_wald[2])/100
}
wald_res_len_100[i] <-  mean(temp_len)
wald_res_coverage_100[i] <-  mean(temp_coverage)
}
plot(p_s, wald_res_len_100)
plot(p_s, wald_res_coverage_100, type = "l")
cp_res_coverage_100 = rep(0,99)
cp_res_len_100 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 100, prob = p_s[i])
##cp
ci_cp = binom.confint(sample_binom, n = 100,alpha = 0.05, methods = "exact")
temp_len[mcs] <- mean(ci_cp$upper- ci_cp$lower)
temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/100& sample_binom/100<mean(ci_cp$upper))/100
}
cp_res_len_100[i] <-  mean(temp_len)
cp_res_coverage_100[i] <-  mean(temp_coverage)
}
plot(p_s, cp_res_len_100)
plot(p_s, cp_res_coverage_100, type = "l")
ac_res_coverage_100 = rep(0,99)
ac_res_len_100 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 100, prob = p_s[i])
##cp
ci_ac = binom.confint(sample_binom, n = 100,alpha = 0.05, methods = "agresti-coull")
temp_len[mcs] <- mean(ci_ac$upper- ci_ac$lower)
temp_coverage[mcs] <-sum(mean(ci_ac$lower) < sample_binom/100& sample_binom/100<mean(ci_ac$upper))/100
}
ac_res_len_100[i] <-  mean(temp_len)
ac_res_coverage_100[i] <-  mean(temp_coverage)
}
plot(p_s,wald_res_len_100, type = "l", frame = FALSE, pch = 19,
col = "red",main="Average lengths of CIs for n = 100", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, cp_res_len_100, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_len_100, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_100, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 100", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2,ylim = c(0.5,1))
lines(p_s, cp_res_coverage_100, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_100, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_30, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 30", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2,ylim = c(0.8,1))
lines(p_s, cp_res_coverage_30, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_30, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_100, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 100", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2,ylim = c(0.8,1))
lines(p_s, cp_res_coverage_100, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_100, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
wald_res_coverage_1000 = rep(0,99)
wald_res_len_1000 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 1000, prob = p_s[i])
##wald
ci_wald = Wald_CI(sample_binom, n = 1000, 100, alpha = 0.05)
temp_len[mcs] <- ci_wald[2] - ci_wald[1]
temp_coverage[mcs] <-sum(ci_wald[1] < sample_binom/1000& sample_binom/1000<ci_wald[2])/100
}
wald_res_len_1000[i] <-  mean(temp_len)
wald_res_coverage_1000[i] <-  mean(temp_coverage)
}
plot(p_s, wald_res_len_1000)
plot(p_s, wald_res_coverage_1000, type = "l")
cp_res_coverage_1000 = rep(0,99)
cp_res_len_1000 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 1000, size = 100, prob = p_s[i])
##cp
ci_cp = binom.confint(sample_binom, n = 1000,alpha = 0.05, methods = "exact")
temp_len[mcs] <- mean(ci_cp$upper- ci_cp$lower)
temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/1000& sample_binom/1000<mean(ci_cp$upper))/100
}
cp_res_len_1000[i] <-  mean(temp_len)
cp_res_coverage_1000[i] <-  mean(temp_coverage)
}
plot(p_s, cp_res_len_1000)
plot(p_s, cp_res_coverage_1000, type = "l")
cp_res_coverage_1000 = rep(0,99)
cp_res_len_1000 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 1000, prob = p_s[i])
##cp
ci_cp = binom.confint(sample_binom, n = 1000,alpha = 0.05, methods = "exact")
temp_len[mcs] <- mean(ci_cp$upper- ci_cp$lower)
temp_coverage[mcs] <-sum(mean(ci_cp$lower) < sample_binom/1000& sample_binom/1000<mean(ci_cp$upper))/100
}
cp_res_len_1000[i] <-  mean(temp_len)
cp_res_coverage_1000[i] <-  mean(temp_coverage)
}
plot(p_s, cp_res_len_1000)
plot(p_s, cp_res_coverage_1000, type = "l")
ac_res_coverage_1000 = rep(0,99)
ac_res_len_1000 = rep(0,99)
for (i in 1:99) {
temp_len = rep(0,1000)
temp_coverage = rep(0,1000)
for (mcs in 1:1000) {
sample_binom = rbinom(n = 100, size = 1000, prob = p_s[i])
##cp
ci_ac = binom.confint(sample_binom, n = 1000,alpha = 0.05, methods = "agresti-coull")
temp_len[mcs] <- mean(ci_ac$upper- ci_ac$lower)
temp_coverage[mcs] <-sum(mean(ci_ac$lower) < sample_binom/1000& sample_binom/1000<mean(ci_ac$upper))/100
}
ac_res_len_1000[i] <-  mean(temp_len)
ac_res_coverage_1000[i] <-  mean(temp_coverage)
}
plot(p_s,wald_res_len_1000, type = "l", frame = FALSE, pch = 19,
col = "red",main="Average lengths of CIs for n = 1000", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2)
lines(p_s, cp_res_len_1000, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_len_1000, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_1000, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 1000", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2,ylim = c(0.8,1))
lines(p_s, cp_res_coverage_1000, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_1000, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
plot(p_s,wald_res_coverage_1000, type = "l", frame = FALSE, pch = 19,
col = "red",main="Coverage probabilities of CIs for n = 1000", xlab = "probability of success", ylab = "average length of CI",
lty = 1, lwd = 2,ylim = c(0.92,1))
lines(p_s, cp_res_coverage_1000, pch = 23, col = "blue", type = "l",
lty = 2, lwd = 2)
lines(p_s, ac_res_coverage_1000, pch = 18, col = "green", type = "b",
lty = 3, lwd = 2)
legend("topleft", legend = c("Wald CI", "C-P CI", "A-C CI"),
col = c("red", "blue", "green"), lty = 1:3, cex = 0.8)
