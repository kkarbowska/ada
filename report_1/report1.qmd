---
title: "Analiza Danych Ankietowych, Sprawozdanie 1"
lang: pl
author: "Katarzyna Karbowska, Maciej Ostapiuk"
format: pdf
editor: visual
---

```{r}
#| echo: false
#| warning: false
library(tidyverse)
library(here)
library(ggmosaic)
```

# 1. Wstęp

## 1.1. Opis danych

Analizowany zbiór danych został zadany przez prowadzącego wykład "Analiza Danych Ankietowych". Dane dotyczą ankiety przeprowadzonej w pewnej dużej agencji reklamowej, która miała na celu ocenę satysfakcji z pracy. Wiadomo że w ankiecie wzięło udział dwieście losowo wybranych osób. W tym zestawie znajduje się osiem następujących zmiennych, będących odpowiedziami na poszczególne pytania:

-   **DZIAŁ** - jest odpowiedzią na pytanie "W jakim dziale jesteś zatrudniony", przyjmuje wartości **HR** (Dział obsługi kadrowo-płacowej), **IT** (Dział utrzymania sieci i systemów informatycznych), **DK** (Dział Kreatywny) lub **DS** (Dział Strategii)

-   **STAŻ** - zmienna odpowiadająca na pytanie "Jak długo pracujesz w firmie?", przyjmująca wartości **1** (poniżej 1 roku), **2** (Między jednym rokiem a trzema latami), **3** (Powyżej trzech lat)

-   **CZY_KIER** - zmienna będąca odpowiedzią na pytanie "Czy pracujesz na stanowisku menedżerskim?", przyjmująca wartości **Tak** (osoba jest na stanowisku menedżerskim) lub **Nie** (osoba obejmuje inne stanowisko niż menedżerskie)

-   **PYT_1 -** stanowi odpowiedź na pytanie "Jak bardzo zgadzasz się ze stwierdzeniem, że firma pozwala na elastyczne godziny pracy tym samym umożliwiając zachowanie równowagi między pracą a życiem prywatnym?", przyjmuje wartości: **-2** (zdecydowanie się nie zgadzam), **-1** (nie zgadzam się), **0** (nie mam zdania), **1** (zgadzam się), **2** (zdecydowanie się zgadzam)

-   **PYT_2** - odpowiada zadane pytanie "Jak bardzo zgadzasz się ze stwierdzeniem, że twoje wynagrodzenie adekwatnie odzwierciedla zakres wykonywanych przez ciebie obowiązków? i przyjmuje odpowiednie wartości **-2** (zdecydowanie się nie zgadzam), **-1** (nie zgadzam się), **1** (zgadzam się), **2** (zgadzam się)

-   **WIEK** - oznacza wiek respondenta

-   **PŁEĆ** - wskazuje na płeć ankietowanego

-   **PYT_3** - jest odpowiedzią dotyczącą wynagrodzenia z pracy, po rewizji wynagrodzeń, w której część pracowników otrzymało podwyżki

# 2. Wykonanie zadań z części I

## 2.1. Zadanie 1

**Wczytaj dane i przygotuj je do analizy. Zadbaj o odpowiednie typy zmiennych, zweryfikuj czy przyjmują wartości zgodne z powyższym opisem, zbadaj czy nie występują braki w danych.**

```{r}
#| echo: false
#| warning: false
katalog = dirname(normalizePath(file.choose())) # wybiera sie plik na którym chcemy pracować i najlepiej ten w którym są dane
setwd(katalog)
```

```{r}
#| warning: false
data <- read.csv("ankieta.csv", sep = ';', 
                 col.names = c('DZIAL', 'STAZ', 
                               'CZY_KIER', 'PYT_1', 
                               'PYT_2', 'PYT_3', 
                               'PLEC', 'WIEK'))
```

Sprawdźmy teraz czy wartości w kolumnach są przyjmowane wedle opisu tabeli.

```{r}
#| warning: false
sort(unique(data$DZIAL))    
sort(unique(data$STAZ))     
unique(data$CZY_KIER)      
sort(unique(data$PYT_1))  
sort(unique(data$PYT_2))
```

Widzimy, że zmienne przyjmują wartości zgodne z opisem. Zobaczmy na ilość braków danych w poszczególnych kolumnach.

```{r}
#| warning: false
data %>% sapply(function(x) sum(is.na(x)))
```

Nie mamy żadnych braków w danych. Pozostaje nam sprawdzić jeszcze typy danych

```{r}
str(data)
```

Zauważmy, że zmienne DZIAŁ, STAŻ, CZY_KIER, PYT_1, PYT_2, PYT_3, PLEC zgodnie z opisem danych są zmiennymi kategorycznymi, zatem więc typ zmiennych w zbiorze danych jest błędny, co należy zmienić.

```{r}
#| warning: false
data <- data %>%
  mutate_at(vars(DZIAL, STAZ, CZY_KIER, PYT_1, PYT_2, PYT_3, PLEC), as.factor)
```

## 2.2. Zadanie 2

**Utwórz zmienną *WIEK_KAT* przeprowadzając kategoryzacje zmiennej WIEK korzysatając z następujących przedziałów: do 35 lat, między 36 a 45 lat, między 46 a 55 lat, powyżej 55 lat.**

```{r}
#| warning: false
przedzialy_wiekowe <- c(0, 35, 45, 55, Inf)
nazwy_kategori <- c("0-35", "36-45", "46-55", "55+")
data$WIEK_KAT <- cut(data$WIEK, przedzialy_wiekowe, labels = nazwy_kategori, include.lowest = TRUE)
```

## 2.3. Zadanie 3

**Sporządź tablice liczności dla zmiennych: *DZIAŁ*, *STAZ*, *CZY_KIER*, *PŁEC*, *WIEK_KAT***.

```{r}
#| warning: false
amount_dzial <- data %>% group_by(DZIAL) %>% summarise(ile = n())
amount_staz <- data %>% group_by(STAZ) %>% summarise(ile = n())
amount_czy_kier <- data %>% group_by(CZY_KIER) %>% summarise(ile = n())
amount_plec <- data %>% group_by(PLEC) %>% summarise(ile = n())
amount_wiek_kat <- data %>% group_by(WIEK_KAT) %>% summarise(ile = n())
```

Przykładowo wyświetlimy jedną z nich - tablice liczności zmiennej DZIAL.

```{r}
#| warning: false
#| echo: false
knitr::kable(amount_dzial)
```

## 2.4. Zadanie 4

**Sporządź wykresy kołowe oraz wykresy słupkowe dla zmiennych: *PYT_1* oraz *PYT_2***.

Najpierw sporządźmy wykresy słupkowe. Mamy:

```{r}
#| warning: false
kolory <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854") 

# zmienna PYT_1
data %>% 
  ggplot(aes(x = factor(PYT_1), fill = factor(PYT_1))) +
  geom_bar(fill='#66c2a5') +
  xlab('Odpowiedzi') + 
  ylab('Liczba obserwacji') +
  ggtitle('Wykres słupkowy zmiennej PYT_1', 
          subtitle = '"Jak bardzo zgadzasz się ze stwierdzeniem, że firma pozwala na \nelastyczne godziny pracy tym samym umożliwiając \nzachowanie równowagi między pracą \na życiem prywatnym?"') +
  scale_x_discrete(labels = c("zdecydowanie się \n nie zgadzam", 
                              "nie zgadzam się", 
                              "nie mam zdania", 
                              "zgadzam się", 
                              "zdecydowanie \n się zgadzam")) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))


# zmienna PYT_2
data %>% 
  ggplot(aes(x = factor(PYT_2), fill = factor(PYT_2))) +
  geom_bar(fill='#66c2a5') +
  xlab('Odpowiedzi') + 
  ylab('Liczba obserwacji') +
  ggtitle('Wykres słupkowy zmiennej PYT_2', 
          subtitle = '"Jak bardzo zgadzasz się ze stwierdzeniem, że twoje wynagrodzenie \nadekwatnie odzwierciedla zakres wykonywanych \nprzez ciebie obowiązków?"') +
  scale_x_discrete(labels = c("zdecydowanie się \n nie zgadzam", 
                              "nie zgadzam się", 
                              "zgadzam się", 
                              "zdecydowanie \n się zgadzam"))
  theme(axis.text.x = element_text(angle = 30, hjust = 1))
```

Następnie, podane wizualizacje przedstawmy w postaci wykresów kołowych.

```{r}
#| warning: false
data %>% 
    ggplot(aes(x = '', fill = factor(PYT_1))) +
    geom_bar(color = 'white') +
    scale_fill_manual(values = kolory,
                      name = 'Odpowiedzi',
                      labels = c("zdecydowanie się nie zgadzam", 
                                 "nie zgadzam się", 
                                 "nie mam zdania", 
                                 "zgadzam się", 
                                 "zdecydowanie się zgadzam")) +
    coord_polar('y', start = pi / 2) +
    labs(title = 'Wykres kołowy dla zmiennej PYT_1') +
    theme_void()
    

# zmienna PYT_2
data %>% 
  ggplot(aes(x = '', fill = factor(PYT_2))) +
  geom_bar(color = 'white') +
  scale_fill_manual(values = kolory,
                    name = 'Odpowiedzi',
                    labels = c("zdecydowanie się nie zgadzam", 
                               "nie zgadzam się", 
                               "zgadzam się", 
                               "zdecydowanie się zgadzam")) +
  coord_polar('y', start = pi / 2) +
  labs(title = 'Wykres kołowy dla zmiennej PYT_2') +
  theme_void()

```

## 2.5. Zadanie 5

**Sporządź tablice wielodzielcze dla par zmiennych: *PYT_1* i *DZIAL*, *PYT_1* i *STAŻ*, *PYT_1* i *CZY_KIER*, *PYT_1* i *PŁEC* oraz *PYT_1* i *WIEK_KAT***.

Wywołamy przykładowo jedną z tablic- dla zmiennych ***PYT_1*** i ***DZIAL***.

```{r}
#| warning: false
crosstab_dzial_pyt1 <-table(data$DZIAL, data$PYT_1)
knitr::kable(crosstab_dzial_pyt1)
crosstab_staz_pyt1  <-table(data$STAZ, data$PYT_1)
crosstab_staz_czy_kier_pyt1 <-table(data$CZY_KIER, data$PYT_1)
crosstab_staz_płeć_pyt1 <-table(data$PLEC, data$PYT_1)
crosstab_staz_wiek_kat_pyt1 <-table(data$WIEK_KAT, data$PYT_1)
```

## 2.6. Zadanie 6

**Sporządź tablice wielodzielczą dla pary zmiennych: *PYT_2* i *PYT_3.***

To zadanie rozwiązujemy podobnie, jak zadanie 5. Uzyskujemy:

```{r}
#| warning: false
crosstab_staz_wiek_kat_pyt1 <-table(data$PYT_2, data$PYT_3)
knitr::kable(crosstab_staz_wiek_kat_pyt1)
```

## 2.7. Zadanie 7

**Utwórz zmienną *CZY_ZADOW* na podstawie zmiennej *PYT_1*, łącząc kategorie "nie zgadzam się" i "zdecydowanie się nie zgadzam" oraz "zgadzam się" i "zdecydowanie się zgadzam".**

W naszym podejściu zmienna ***CZY_ZADOW*** przyjmuje następujące wartości:

-   1- osoba jest zadowolona

-   0- osoba nie ma zdania- nie potrafi zdecydować

-   -1- osoba jest niezadowolona.

```{r}
#| warning: false
data <- mutate(data, 
               CZY_ZADOW = ifelse(as.numeric(as.character(PYT_1)) == -2, "-1",
                      ifelse(as.numeric(as.character(PYT_1)) == -1, "-1",
                      ifelse(as.numeric(as.character(PYT_1)) == 0, "0",
                      ifelse(as.numeric(as.character(PYT_1)) == 1, "1",
                      ifelse(as.numeric(as.character(PYT_1)) == 2, "1", "_"))))))
```

## 2.8. Zadanie 8

Sporządź wykresy mozaikowe odpowiadające parom zmiennych: ***CZY_ZADOW*** i ***DZIAŁ***, ***CZY_ZADOW*** i ***STAZ***, ***CZY_ZADOW*** i ***CZY_KIER***, ***CZY_ZADOW*** i ***PLEC*** oraz ***CZY_ZADOW*** i ***WIEK_KAT***. Czy na podstawie uzyskanych wykresów można postawić pewne hipotezy dotyczące relacji między powyższymi zmiennymi? Spróbuj sformułować kilka takich hipotez.

```{r}
#| warning: false
data %>% ggplot() +
  geom_mosaic(aes(x = product(CZY_ZADOW,DZIAL)), fill='#66c2a5') +
  ylab("Czy osoba jest zadowolona") + 
  xlab("Dział") + 
  ggtitle("Zadowolenie w zależności \nod działu ankietowanych osób") +
  theme_mosaic()
```

Zauważmy, że największy odsetek osób zadowolonych ze swojej sytuacji badanej w firmie przypada na dział IT. Nic w tym dziwnego - zarobki są atrakcyjne oraz sama praca z reguły jest dla osób, które w tej pracy lubią się spełniać - praca w dziale komunikacji jest łatwiej "dostępna" i osiągalna, co niesie za sobą ryzyko związane z tym, że ludzie tam pracujący nie robią tego z pasji.

```{r}
#| warning: false
data %>% ggplot() +
  geom_mosaic(aes(x = product(CZY_ZADOW, STAZ)), fill='#66c2a5') +
  ylab("Czy osoba jest zadowolona") + 
  xlab("Długość stażu") + 
  ggtitle("Zadowolenie w zależności od długości \nstażu ankietowanych osób") + 
  theme_mosaic()
```

Z kolei tutaj zauważamy największe zadowolenie wśród stażystów ze stażem w długości od roku do 3 lat. Jest to dosyć długi czas, jak na staż, jednakże może być to związane z poczuciem integralności w firmie, reputacja na swój temat oraz swojej pozycji w firmie rośnie. Stażyści powyżej 3 lat mają podzielone zdania- jest to już bardzo długi okres jeżeli chodzi o stanowiska stażowe, pracownicy z pewnością chcieliby zostać bardziej docenieni, bardziej poważani wśród innych pracowników.

```{r}
#| warning: false
data %>% ggplot() +
  geom_mosaic(aes(x = product(CZY_ZADOW,CZY_KIER)), fill='#66c2a5') +
  ylab("Czy osoba jest zadwolona") + 
  xlab("Czy osoba jest kierownikiem") + 
  ggtitle("Zadowolenie w zależności od bycia na \nstanowisku kierowniczym \n wśród ankietowanych osób") +
  theme_mosaic()
```

Zdecydowanie widzimy wieksze, dominujące zadowolenie wśród pracowników niebędących kierownikami. Stanowiska kierownicze rządzą się oczywiście swoimi prawami, więc nie powinno to budzić wątpliwości.

```{r}
#| warning: false
data %>% ggplot() +
  geom_mosaic(aes(x = product(CZY_ZADOW,PLEC)), fill='#66c2a5') +
  ylab("Czy osoba jest zadowolona") + 
  xlab("Płeć") + 
  ggtitle("Zadowolenie w zależności od płci \nankietowanych osób") + 
  theme_mosaic() 
```

Jeżeli rozważymy zadowolenie w zależności od płci ankietowanych osób, to tutaj nie ma większych różnic. Zdecydowanie więcej ankietowanych to mężczyźni, jednakże odsetek osób zadowolonych wśród obu płci jest podobny. Można wnioskować o równym traktowaniu pracowników firmy.

```{r}
#| warning: false
data %>% ggplot() +
  geom_mosaic(aes(x = product(CZY_ZADOW,WIEK_KAT)), fill='#66c2a5') +
  ylab("Czy osoba jest zadwolona") + 
  xlab("Przedział wiekowy") + 
  ggtitle("Zadowolenie w zależności od wieku \nankietowanych osób") + 
  theme_mosaic() 
```

Największa ilość pracowników przypada na przedział wiekowy 36-45. Jednymi z najbardziej zadowolnych pracowników są ci w wieku 46-55.

Generalnie, ułożenie wykresów mozaikowych przeważnie sugeruje na pewne wzorce w zadowoleniu społeczeństwa. Najbardziej niezależnym aspektem jest płeć człowieka.

# 3. Wykonanie zadań z części II

## 3.1.  Zadanie 1

Zapoznaj się z biblioteką likert i dostępnymi tam funkcjami summary oraz plot (wykresy typu "bar", "heat" oraz "density"), a następnie zilustruj odpowiedzi na pytanie "Jak bardzo zgadzasz się ze stwierdzeniem, że firma pozwala na (...)?" (zmienna **PYT_1**) w całej badanej grupie oraz w podgrupach ze względu na zmienna **CZY_KIER**.

Pakiet likert służy do analizy danych zgromadzonych przy użyciu skali Likerta. Funkcja summaryw tej bibliotece daje krótkie podsumowanie zbioru danych. Zawiera nazwę danych których dotyczy analiza ("Item"), a także kolumnę "low" odpowiadającą za sumę odpowiedzi poniżej wartości neutralnej, kolumnę "high" odpowiadająca za sumę odpowiedzi poniżej wartości powyżej wartości neutralnej, oraz kolumny "średnia" i "sd" odpowiadające odpowiednio średniej i odchyleniu standardowemu. Poniżej znajduje się krótkie podsumowanie zmiennej PYT_1 wykonane funkcją summary.

```{r}
#| warning: false
likert_df = likert(data[,"PYT_1", drop=FALSE])
knitr::kable(summary(likert_df))
```

Przejdziemy teraz do z ilustrowania odpowiedzi na pytanie "Jak bardzo zgadzasz się ze stwierdzeniem, że firma pozwala na elastyczne godziny pracy tym samym umożliwiając zachowanie równowagi między pracą a życiem prywatnym?". Wykonaliśmy w tym celu wykresy typu "bar", "heat" oraz "density" dla zadanej zmiennej PYT_1. Wykres typu "bar" znajduję się poniżej. Zauważmy, że większość respontentów zgadza się ze stwierdzeniem że firma pozwala na elastyczne godziny pracy, tym samym umożliwiając zachowanie równowagi między pracą a życiem prywatnym. Zdecydowanie mniej bo aż tylko 16% nie opowiada się za tym zdaniem. Można przypuszczać, że pracownicy są zadowoleni z takiego trybu pracy.

```{r}
#| warning: false
plot(likert_df, type = 'bar', legend.position = 'right') +
  ylab('Wartość procentowa') +
  xlab(' ') +
  ggtitle('Wykres typu bar dla zmiennej PYT_1 (cała badana grupa)',
          subtitle = 'Jak bardzo zgadzasz się ze stwierdzeniem, \n że firma pozwala na elastyczne godziny pracy \n tym samym umożliwiając zachowanie równowagi między pracą a życiem prywatnym?') +
  scale_fill_manual(values = kolory,
                    name = 'Odpowiedzi',
                    labels = c("zdecydowanie się nie zgadzam", 
                               "nie zgadzam się", "nie mam zdania", 
                               "zgadzam się", 
                               "zdecydowanie się zgadzam"))
```

Na poniższym rysunku mamy wykres typu heat. Możemy poznać procentowy rozkład odpowiedzi na pytanie " Jak bardzo zgadzasz się ze stwierdzeniem, że firma pozwala na elastyczne godziny pracy, tym samym umożliwiając zachowanie równowagi między pracą a życiem prywatnym?". Możemy zauważyć tak na poprzednim wykresie, że pracownicy są zgodni z tym twierdzeniem. Dodatkowo mamy pokazaną średnią odpowiedzi, która wynosi 3,56.

```{r}
plot(likert_df, type = 'heat', low.color = "#F3FFFB", high.color = "#66c2a5") + 
  ggtitle('Wykres typu heat dla zmiennej PYT_1 (cała badana grupa)',
          subtitle = '"Jak bardzo zgadzasz się ze stwierdzeniem,  że firma pozwala na elastyczne godziny pracy \n tym samym umożliwiając zachowanie równowagi między pracą a życiem prywatnym?"') +
  scale_y_discrete(labels = c("zdecydowanie się \n nie zgadzam", 
                              "nie zgadzam się", 
                              "nie mam zdania", 
                              "zgadzam się", 
                              "zdecydowanie \n się zgadzam", 
                              "Mean(SD)")) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))

```

Poniższy wykres przedstawia rozkład zmiennej PYT_1. Podobnie jak w poprzednich wizualizacjach może wywnioskować, że jest więcej osób, które się zgadzają z stwierdzeniem.

```{r}
plot(likert_df, type = 'density', facet=TRUE) +
  scale_x_continuous(breaks=c(1,2,3, 4, 5),
                     labels=c("zdecydowanie się \n nie zgadzam", 
                              "nie zgadzam się", 
                              "nie mam zdania", 
                              "zgadzam się", 
                              "zdecydowanie \n się zgadzam")) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))
### Wykres przedstawia rozkład zmiennej PYT_1. Podobnie jak w poprzednich wykresach może
### wywnioskować, że jest więcej osób, które się zgadzają z stwierdzeniem.
```

W następnym kroku wykonaliśmy wykres typu "bar" dla analizowanej zmiennej PYT_1 z podziałem na podgrupy ze względu na zmienną CZY_KIER. Na poniższym diagramie mamy podział na osoby które są menadżerem ('TAK') oraz nie piastują tego stanowiska ('NIE'). Możemy zauważyć, że więcej pracowników firmy, którzy nie mają stanowiska menadżerskiego niż tych które je mają jest zadowolona z elastycznych godzin pracy. Może być to związane z tym, że menadżer posiada z pewnością obowiązków i granica pomiędzy życiem prywatnym a zawodowym może się zacierać.

```{r}
subgroup_likert <- likert(data[,"PYT_1", drop=FALSE], grouping = data$CZY_KIER)

plot(subgroup_likert, type = "bar") +
  ylab('Wartość procentowa') +
  xlab('Podział na zmienną CZY_KIER') +
  ggtitle('Wykres typu heat dla zmiennej PYT_1 (podział na podgrupy)',
          subtitle = '"Jak bardzo zgadzasz się ze stwierdzeniem,  że firma pozwala na elastyczne godziny pracy \n tym samym umożliwiając zachowanie równowagi między pracą a życiem prywatnym?"') +
  scale_fill_manual(values = kolory,
                    name = 'Odpowiedzi',
                    labels = c("zdecydowanie się nie zgadzam", 
                               "nie zgadzam się", 
                               "nie mam zdania", 
                               "zgadzam się", 
                               "zdecydowanie się zgadzam")) + 
  theme(legend.position = 'right')
```

## 3.2. Zadanie 2.

**Zapoznaj sie z funkcją sample z biblioteki stats, a następnie wylosuj próbkę o liczności 10% wszystkich rekordów z pliku "ankieta.csv" w dwóch wersjach: ze zwracaniem oraz bez zwracania.**

Wylosowaliśmy próbkę o liczności 10% wszystkich rekordów z analizowanego zbioru danych w oby dwóch wersjach ze zwracaniem oraz bez zwracania, i wyświetliliśmy uzyskane wartości.

```{r}
#| warning: false
n <- nrow(data) * 0.1 # 10% z 200 
 
# losowanie bez zwracania
which_row_false <- sample(c(1:nrow(data)), size = n, replace = FALSE)
cat("Próbka wylosowana bez zwracania",which_row_false)
# view(data[which_row_false,]) - tak możemy wyświetlić dane o podanych indeksach

# losowanie ze zwracaniem 
which_row_true <- sample(c(1:nrow(data)), size = n, replace = TRUE)
cat("Próbka wylosowana ze zwracaniem",which_row_false)
```

## 3.3. Zadanie 3.

**Zaproponuj metode symulowania zmiennych losowych z rozkładu dwumianowego. Napisz funkcje do generowania realizacji, a nastepnie zaprezentuj jej działanie porównujac wybrane teoretyczne i empiryczne charakterystyki dla przykładowych wartosci paramertów rozkładu: n i p.**

Będziemy generować zmienne losowe z rozkładu dwumianowego metodą odwrotnej dystrybuanty.

```{r}
set.seed(123)

generate_binom <- function(n, p, N){
  U <- runif(N)
  p0 <- (1 - p)^n 
  Cprob <- p0
  
  for (i in 0:n) {
    if (i == 0) {
      U[U <= Cprob] <- n + 1
    } else if (i == 1) {
      U[U <= Cprob] <- n + 2
    } else {
      U[U <= Cprob] <- i
    }
    
    p0 <- ((n - i) / (i + 1)) * (p / (1 - p)) * p0
    Cprob <- Cprob + p0
  }
  
  U[U == n + 1] <- 0
  U[U == n + 2] <- 1
  
  return(U)}

```

Sprawdzimy działanie oraz poprawność generatora zmiennych losowych porównując charakterystyki rozkładu. Porównamy ze sobą dystrybuanty, gęstości, średnie i wariancje teoretyczne oraz empiryczne.

```{r}
# funkcja do porównywania dystrybuant
comparison_cdfs_binom <- function(n=20, p, size=1){
  
  sample <- generate_binom(n, p, size)
  empirical_cdf <- ecdf(sample)
  x_values <- 0:n
  
  plot(empirical_cdf, main = "Porównanie dystrybuant empirycznej z teoretyczną", 
       col = "blue", lwd = 2)
  curve(pbinom(x, n, p), add = TRUE, col = "red", lwd = 2, lty = 2, n = 1000)
  legend("bottomright", legend = c("Empiryczna", "Teoretyczna"), 
         col = c("blue", "red"), lty = 1:2, lwd = 2) }

# funkcja do porównywania gęstości  
comparison_pdfs_binom <- function(n, p, size=1){
  sample <- generate_binom(n, p, size)
  x_values <- 0:n
  theoretical_prob <- dbinom(x_values, n, p)
  
  values <- unique(sample)
  counts <- table(sample)
  empirical_prob <- counts/size
  
  plot(empirical_prob, type = "p", col = "blue", pch = 16, ylim = c(0, max(max(empirical_prob), max(theoretical_prob)) + 0.05),
       xlab = "x", ylab = "Probability", main = "Porównanie rozkładów prawdopodobieństwa \n rozkład dwumianowy")
  points(x_values, theoretical_prob, col = "red", pch = 16)
  legend("topright", 
         legend = c("Empiryczny", "Teoretyczny"), 
         col = c("blue", "red"), 
         pch = 16)}

# funkcja do porównywania średniej
comparison_mean_binom <- function(n=20, p, size=1){
  sample <- generate_binom(n, p, size)
 
  mean_empirical <- mean(sample)
  mean_theoretical <- n * p
  
  cat("\n\nŚrednia empiryczna:", mean_empirical, "\n")
  cat("Średnia teoretyczna:", mean_theoretical, "\n\n")
}

# funkcja do porównywania wariancji
comparison_var_binom <- function(n=20, p, size=1){
  sample <- generate_binom(n, p, size)
  
  var_empirical <- var(sample)
  var_theoretical <- n * p * (1 - p)
  
  cat("Wariancja empiryczna:", var_empirical, "\n")
  cat("Wariancja teoretyczna:", var_theoretical, "\n")
}


```

Dla przykładu weźmiemy sobie rozkład o wartościach parametrów rozkładu n = 20 i p = 0.1.

```{r}
comparison_cdfs_binom(n=20, 0.1, size=1000)
comparison_pdfs_binom(20, 0.1, size=1000)
comparison_mean_binom(20, 0.1, size=1000)
comparison_var_binom(20, 0.1, size=1000)

```

Porównania dystrybuant, gęstości oraz średniej i wariancji wskazuja na poprawność generatora zmiennych losowych.
